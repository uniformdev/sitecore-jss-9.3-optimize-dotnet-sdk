<!-- 
    UNIFORM
    This file is a part of Uniform distribution package

    IMPORTANT! Do not modify this file because all changes will be lost during further upgrade:
    Use patch files instead: https://doc.sitecore.com/developers/90/platform-administration-and-architecture/en/use-a-patch-file-to-customize-the-sitecore-configuration.html
-->

<configuration
  xmlns:set="http://www.sitecore.net/xmlconfig/set/"
  xmlns:role="http://www.sitecore.net/xmlconfig/role/"
  xmlns:patch="http://www.sitecore.net/xmlconfig/">

  <sitecore role:require="ContentManagement or Standalone">
      
    <commands>        
      <command name="uniform:deploy:schedulefulldeployment" type="Uniform.Commands.ScheduleFullDeployment, Uniform.Deployment.Incremental" />
    </commands>
    
    <uniform>
      <services>

        <!-- for incremental deploy-enabled sites WebClient-variant can be attached to site configuration to request .timestamp.txt file from the CDN to get last deployment date which will be used by incremental deployment scope service -->
        <webClientDeploymentStateService type="Uniform.Services.WebClientDeploymentStateService, Uniform.Deployment.Incremental" singleInstance="false" />

        <akamaiClientDeploymentStateService type="Uniform.Services.AkamaiClientDeploymentStateService, Uniform.Deployment.Incremental" singleInstance="false" />
          
        <!-- incremental deployment scope service generates a list of pages that were changed since the last deployment date supplied by the deployment scope service -->
        <incrementalDeploymentScopeService type="Uniform.Services.IncrementalDeploymentScopeService, Uniform.Deployment.Incremental" singleInstance="false" />
        
        <mediaDeploymentScopeService set:ref="uniform/services/incrementalMediaDeploymentScopeService" />
        
        <incrementalMediaDeploymentScopeService singleInstance="false" type="Uniform.Services.IncrementalMediaDeploymentScopeService, Uniform.Deployment.Incremental" />
      </services>
      
    </uniform>

    <pipelines>
      <group name="uniform" groupName="uniform">
        <pipelines>
          <getDependentPages>

            <processor type="Uniform.Pipelines.GetDependentPages.CheckFullDeploymentRequested, Uniform.Deployment.Incremental" />

            <processor type="Uniform.Pipelines.GetDependentPages.CheckFullDeploymentRules, Uniform.Deployment.Incremental">
              <rules hint="list:AddFullDeploymentRule">
                <!--<rule type="TYPE_IMPLEMENTS_Uniform.FullDeploymentRules.IFullDeploymentRule"/>-->
              </rules>
            </processor>

            <processor type="Uniform.Pipelines.GetDependentPages.CheckIfPage, Uniform.Deployment.Incremental">
              <param desc="mapNodeService" ref="uniform/services/mapNodeService" />
              
              <abortIfFound>false</abortIfFound>
            </processor>
            
            <!-- SXA's local datasources -->
            <processor type="Uniform.Pipelines.GetDependentPages.CheckIfLocalPageDatasource, Uniform.Deployment.Incremental">
              <abortIfFound>false</abortIfFound>
              
              <LocalPageDatasourceFolderTemplate>{1C82E550-EBCD-4E5D-8ABD-D50D0809541E}</LocalPageDatasourceFolderTemplate>
            </processor>
            
            <processor type="Uniform.Pipelines.GetDependentPages.CheckLinkDatabaseReferrers, Uniform.Deployment.Incremental">
              <param desc="mapNodeService" ref="uniform/services/mapNodeService" />
              
              <abortIfFound>false</abortIfFound>
            </processor>
            
            <processor type="Uniform.Pipelines.GetDependentPages.CheckParentItemLinkDatabaseReferrers, Uniform.Deployment.Incremental">
              <param desc="mapNodeService" ref="uniform/services/mapNodeService" />

              <abortIfFound>false</abortIfFound>

              <Locators hint="raw:AddLocator">
                <!-- 
                <slides type="Uniform.Pipelines.GetDependentPages.EvaluatedItemLocators.AncestorByTemplateLocator, Uniform.Deployment.Incremental" 
                         itemtemplateid="{TEMPLATE-OF-SLIDE-DATA-ITEM}" 
                         parenttemplateid="{TEMPLATE-OF-SLIEDES-FOLDER-ITEM-THAT-IS-ACTUALLY-USED-AS-RENDERING'S-DATASOURCE}" 
                         />
                -->
              </Locators>
            </processor>

            <processor type="Uniform.Pipelines.GetDependentPages.CheckMediaNestedDependentPages, Uniform.Deployment.Incremental">
              <param desc="mapNodeService" ref="uniform/services/mapNodeService" />

              <abortIfFound>false</abortIfFound>
            </processor>
            
            <!--
            <processor type="Uniform.Pipelines.GetDependentPages.AncestorByTemplate, Uniform.Deployment.Incremental">
              <param desc="mapNodeService" ref="uniform/services/mapNodeService" />
              <itemTemplateId>{TEMPLATE_OF_EVALUATED_ITEM}</itemTemplateId>
              <ancestorTemplateId>{TEMPLATE_OF_EXPECTED_PARENT_ITEM}</ancestorTemplateId>
              <maxLevel>{MAX_AMOUNT_OF_LEVELS_TO_CHECK}</maxLevel>
            </processor>
            -->
          </getDependentPages>
        </pipelines>
      </group>
    </pipelines>
  </sitecore>
</configuration>
