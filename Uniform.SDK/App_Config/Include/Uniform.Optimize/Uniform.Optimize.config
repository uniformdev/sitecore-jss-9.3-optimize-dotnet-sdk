<configuration xmlns:set="http://www.sitecore.net/xmlconfig/set/" xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore>
     <commands role:require="ContentManagement or Standalone"> 
       <command name="uniform:optimize:personalization:audit" type="Uniform.Optimize.Commands.PersonalizationAuditCommand, Uniform.Optimize.Core" />
     </commands>

    <pipelines>
      <group name="uniform" groupName="uniform">
        <pipelines>
          <getTrackingNode>
            <processor type="Uniform.Optimize.Pipelines.GetTrackingNode.InitializeTrackingNode, Uniform.Optimize.Core" />
            <processor type="Uniform.Optimize.Pipelines.GetTrackingNode.AddDestinations, Uniform.Optimize.Core" />
            <processor type="Uniform.Optimize.Pipelines.GetTrackingNode.AddTrackerCookies, Uniform.Optimize.Core" />
            <processor type="Uniform.Optimize.Pipelines.GetTrackingNode.AddTrackerScripts, Uniform.Optimize.Core" />
          </getTrackingNode>
          <getTrackerDispatchDestinations>
          </getTrackerDispatchDestinations>
          <getTrackerScriptUrls>
            <processor type="Uniform.Optimize.Pipelines.GetTrackerScriptUrls.GetOptimizeScriptUrl, Uniform.Optimize.Core" />
          </getTrackerScriptUrls>
          <getTrackerCookies>
            <processor type="Uniform.Optimize.Pipelines.GetTrackerCookies.GetGlobalTrackerCookies, Uniform.Optimize.Core" />
          </getTrackerCookies>
          <!--
            PIPELINE: getPersonalizedRenderings
            
            Gets the personalized renderings for a Sitecore item.
            Additional processors can be added when renderings are
            added dynamically (i.e. renderings that are not assigned
            to the presentation details for the item).
            
            * usePageDefinition - By default this processor gets renderings
                                  from the item presentation details. This 
                                  setting loads the page definition for the 
                                  item and returns the renderings from that
                                  object.
          -->
          <getPersonalizedRenderings>
            <processor type="Uniform.Optimize.Pipelines.GetPersonalizedRenderings.GetRenderingsFromItem, Uniform.Optimize.Core">
              <usePageDefinition>false</usePageDefinition>
            </processor>
          </getPersonalizedRenderings>
        </pipelines>
      </group>
    </pipelines>

    <settings>
      <!--
        UNIFORM: RULE CONDITION SERIALIZATION MODE
        
        Some serialization conditions have runtime-specific
        logic. For example, a condition that checks the URL,
        the client-side implementation must use the window
        object while the origin-side implementation must 
        use the req object.
        
        The following options are supported:
        * browserjs
        * json (default if not set or an invalid value is used)
        * nodejs
      -->
      <setting name="Uniform.Optimize.Data.Page.RuleConditionSerializationMode" value="browserjs" />

      <!--
        UNIFORM: DEFAULT EMITTER
        
        An emitter is used to expose personalization logic in a 
        format that is appropriate for the personalization engine.
        For example, if an edge-based personalization engine is 
        used, an emitter that converts personalization logic into
        a format that can run on the edge is required.
        
        Uniform adds a processor to the initialize pipeline to
        generate a list of available emitters so the emitter can
        be controlled from the Sitecore Content Editor. This setting
        specifies which emitter should be used if no emitter is 
        selected.
        
        If used, the value should be set to the name of the 
        EmitterType property from the emitter type.
      -->
      <setting name="Uniform.Optimize.Emitters.Default" value="" />
    </settings>

    <uniform>
      <converters>
        <!-- 
          The default personalization node converter supports client-side
          personalization. If personalization is controlled somewhere 
          else (e.g. the edge), the converter will likely need to be
          swapped out.
        -->
        <personalizationNodeConverter type="Uniform.Optimize.Model.PersonalizationNodeConverter, Uniform.Optimize.Core" />
      </converters>
      <services>
        <trackingNodeService type="Uniform.Optimize.Services.TrackingNodeService, Uniform.Optimize.Core" singleInstance="true" />
        <personalizationNodeService type="Uniform.Optimize.Services.PersonalizationNodeService, Uniform.Optimize.Core" singleInstance="true"/>
        <personalizationTestingNodeService type="Uniform.Optimize.Services.PersonalizationTestingNodeService, Uniform.Optimize.Core" singleInstance="true"/>
        <ruleConditionConverterService type="Uniform.Optimize.Services.RuleConditionConverterService, Uniform.Optimize.Core" singleInstance="true" />

        <optimizeExpandDataNodeService type="Uniform.Services.ExpandDataNodeService, Uniform.Content.Sitecore" singleInstance="true">
          <expanders hint="raw:AddExpander">
            <expander type="Uniform.Expanders.FieldFallbackExpander, Uniform.Content.Sitecore">
              <fields hint="raw:AddFallbackRule">
                <!--<url field="url" fallback="page" />-->
              </fields>
            </expander>
          </expanders>
        </optimizeExpandDataNodeService>
        <optimizeExpandFieldService type="Uniform.Services.ExpandFieldService, Uniform.Content.Sitecore" singleInstance="true">
          <expanders hint="raw:AddExpander">
            <expander type="Uniform.Expanders.StripSystemFields, Uniform.Content.Sitecore"/>
            <!--<expander type="Uniform.Expanders.StripAllFields, Uniform.Content.Sitecore"
              patch:instead="expander[@type='Uniform.Expanders.StripSystemFields, Uniform.Content.Sitecore']">
              <excludeItems hint="raw:AddExcludeItem">
                <item1> {66C8BCC4-0BE1-413D-B740-B11082DB744B}</item1>
              </excludeItems>
              <excludeFields hint="raw:AddExcludeField">                
                <title>{A3B8BCC4-0BE1-413D-B740-B11082DB7103} </title>
                <text> Text </text>
              </excludeFields>
            </expander>-->
            <expander type="Uniform.Expanders.InternalLinkExpander, Uniform.Content.Sitecore"/>
            <expander type="Uniform.Expanders.DateTimeExpander, Uniform.Content.Sitecore"/>
            <expander type="Uniform.Expanders.GeneralLinkExpander, Uniform.Content.Sitecore"/>
            <expander type="Uniform.Expanders.ImageExpander, Uniform.Content.Sitecore"/>
            <!--
            <expander type="Contoso.Expanders.SampleExpander, Contoso" />
            
            namespace Contoso.Expanders 
            {
              public class SampleExpander : IFieldExpander 
              {
                public void Expand(FieldInfo field) 
                {
                  // check field ID
                  if (field.ID == Guid.Parse("...")) 
                  { 
                    // expand field value or remove field from output to reduce size or enforce security
                    // 
                    // for example:                  
                    // * field.Value = null
                    //   to remove from output, or
                    //
                    // * field.Value = ((LookupField)field).TargetItem?["Name"]; 
                    //   to follow the link and use target item's Name field
                    //
                    // note, LinkManager is not supported in these APIs.
                  }
                }
              }  
            }
            -->
          </expanders>
        </optimizeExpandFieldService>
      </services>

      <emitters type="Uniform.Optimize.Emitters.ConditionalLogicEmitterMap, Uniform.Optimize.Core" singleInstance="true">
          <members hint="raw:AddEmitter">
              <default name="Default" type="Uniform.Optimize.Emitters.DefaultEmitter, Uniform.Optimize.Core" singleInstance="true" />
          </members>
      </emitters>

      <optimizeSiteHelper type="Uniform.Optimize.OptimizeSiteHelper, Uniform.Optimize.Core">
        <ignore hint="list">
          <site>admin</site>
          <site>exm</site>
          <site>login</site>
          <site>modules_shell</site>
          <site>modules_website</site>
          <site>publisher</site>
          <site>scheduler</site>
          <site>service</site>
          <site>shell</site>
          <site>system</site>
          <site>unicorn</site>
        </ignore>
      </optimizeSiteHelper>

      <optimizeItemRefreshers>

        <siteItemRefresher type="Uniform.Optimize.Items.OptimizeSiteItemRefresher, Uniform.Optimize.Core">
          <database>master</database>
        </siteItemRefresher>
          
        <emitterItemRefresher type="Uniform.Optimize.Items.OptimizeEmitterItemRefresher, Uniform.Optimize.Core" />

      </optimizeItemRefreshers>
    </uniform>
  </sitecore>
</configuration>
